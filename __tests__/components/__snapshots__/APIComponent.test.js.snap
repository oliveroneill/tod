// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`APIComponent checks location after logging in 1`] = `
<View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
    style={
      Object {
        "height": 80,
      }
    }
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Logging in...
    </Text>
  </View>
</View>
`;

exports[`APIComponent shows children when location and logging in complete 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
>
  Example child component
</Text>
`;

exports[`APIComponent shows error case on send token failure 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "marginTop": 80,
        },
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingLeft": 10,
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Unfortunately we couldn't log you in. Please ensure you have an internet connection.
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Try again
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`APIComponent shows error case when location is disabled 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "marginTop": 80,
        },
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingLeft": 10,
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Unfortunately we couldn't log you in. Please ensure you have an internet connection.
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Try again
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`APIComponent shows spinner while loading 1`] = `
<View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
    style={
      Object {
        "height": 80,
      }
    }
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Logging in...
    </Text>
  </View>
</View>
`;
